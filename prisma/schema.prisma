generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                Int               @id @default(autoincrement())
  accountId         String            @unique
  name              String
  createdAt         DateTime          @default(now())
  companies         Company[]
  projects          Project[]
  projectCategories ProjectCategory[]
  users             User[]
}

model User {
  id              Int                 @id @default(autoincrement())
  username        String              @unique
  password        String
  role            Role                @default(BASIC)
  permissions     Json?
  createdAt       DateTime            @default(now())
  accountId       Int
  account         Account             @relation(fields: [accountId], references: [id])
  companies       UserCompany[]
  projectAccesses UserProjectAccess[]
  tasks           Task[]              @relation("TaskToUser")

  @@unique([accountId, username])
}

model ProjectCategory {
  id        Int       @id @default(autoincrement())
  name      String
  accountId Int
  createdAt DateTime  @default(now())
  projects  Project[]
  account   Account   @relation(fields: [accountId], references: [id])
}

model Project {
  id           Int                 @id @default(autoincrement())
  name         String
  accountId    Int
  companyId    Int
  createdAt    DateTime            @default(now())
  categoryId   Int?
  account      Account             @relation(fields: [accountId], references: [id])
  category     ProjectCategory?    @relation(fields: [categoryId], references: [id])
  company      Company             @relation(fields: [companyId], references: [id])
  userAccesses UserProjectAccess[]
}

model Task {
  id            Int       @id @default(autoincrement())
  taskId        String    @unique
  name          String
  description   String?
  startDate     DateTime?
  dueDate       DateTime?
  priority      Priority  @default(MEDIUM)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  assignedUsers User[]    @relation("TaskToUser")
}

model UserProjectAccess {
  userId    Int
  projectId Int
  role      String?
  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([userId, projectId])
}

model Company {
  id              Int           @id @default(autoincrement())
  name            String
  accountId       Int
  isMasterCompany Boolean       @default(false)
  createdAt       DateTime      @default(now())
  account         Account       @relation(fields: [accountId], references: [id])
  projects        Project[]
  users           UserCompany[]
}

model UserCompany {
  userId    Int
  companyId Int
  role      String?
  company   Company @relation(fields: [companyId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@id([userId, companyId])
}

enum Role {
  ADMIN
  BASIC
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}
